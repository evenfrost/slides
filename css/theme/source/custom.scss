/**
 * White theme for reveal.js. This is the opposite of the 'black' theme.
 *
 * Copyright (C) 2015 Hakim El Hattab, http://hakim.se
 */


// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------


// Include theme-specific fonts
@import url(../../lib/font/Lato2OFLWeb/Lato/latofonts.css);

// Override theme settings (see ../template/settings.scss)
$backgroundColor: #fff;

$mainColor: #222;
$headingColor: #222;

$mainFontSize: 38px;
$mainFont: 'LatoWeb', Helvetica, sans-serif;
$headingFont: 'LatoWeb', Helvetica, sans-serif;
$headingTextShadow: none;
$headingLetterSpacing: normal;
$headingTextTransform: uppercase;
$headingFontWeight: 600;
$linkColor: #2a76dd;
$linkColorHover: lighten( $linkColor, 15% );
$selectionBackgroundColor: lighten( $linkColor, 25% );

$heading1Size: 2.5em;
$heading2Size: 1.6em;
$heading3Size: 1.3em;
$heading4Size: 1.0em;

section.has-dark-background {
	&, h1, h2, h3, h4, h5, h6 {
		color: #fff;
	}
}


// Theme template ------------------------------
@import "../template/theme";
// ---------------------------------------------

*,
*::before,
*::after {
  box-sizing: border-box;
}

.reveal .row {
    align-items: center;
    display: flex;
    justify-content: center;

  > * {
    border: 5px solid #000;
    flex: 0 1 auto;
    height: 200px;
    margin: 10px;
  }

  &.column {

    &.one {

      > * {
        flex-basis: 100%;
      }

    }

    &.three {

      > * {
        flex-basis: calc(100% / 3);
      }

    }

  }

  &.tall {

    > * {
      height: 400px;
    }

  }

  .content {
    position: relative;

    &.random {

      > * {
        $multiplier: 100px;
        position: absolute;

        &:first-child {
          top: round(random() * $multiplier);
          left: round(random() * $multiplier);
        }
        
        &:nth-child(2) {
          top: round(random() * $multiplier);
          left: round(random() * $multiplier);
        }
        
        &:nth-child(3) {
          top: round(random() * $multiplier);
          left: round(random() * $multiplier);
        }
        
        &:last-child {
          top: round(random() * $multiplier);
          left: round(random() * $multiplier);
        }
        
      }

    }

  }


}

.block {
  background: $mainColor;

  &.square {
    height: 30px;
    width: 30px;
  }

}
